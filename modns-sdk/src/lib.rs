
pub mod ffi;
pub mod safe;

pub mod mem_helpers;

mod conversion;

pub use conversion::FfiConversionError;

// Plugin implementation functions
extern "C" {

    /// Implement this function (and impl_encode_resp) to have your plugin
    /// register as having a Listener module
    /// 
    /// Decodes request recieved on associated UDP socket into a DNS protocol
    /// message with queries to be resolved
    pub fn impl_decode_req(req: ffi::ByteVector, message: *mut ffi::DnsMessage) -> u8;

    /// Implement this function (and impl_decode_req) to have your plugin
    /// register as having a Listener module
    /// 
    /// Encodes responses generated by the resolver into a response to send
    /// back to the requester over the original UDP socket
    pub fn impl_encode_resp(resp: *const ffi::DnsMessage, buf: *mut ffi::ByteVector) -> u8;

    /// Implement this function for your plugin to register as having a Resolver module.
    /// 
    /// Resolves a request generated by the Listener into a response message, likely
    /// by querying (an) upstream resolver(s)
    pub fn impl_resolve_req(req: *const ffi::DnsMessage, resp: *mut ffi::DnsMessage) -> u8;
}