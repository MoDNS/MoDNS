name: Package for Debian

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-backend:
    uses: MoDNS/MoDNS/.github/workflows/backend-workflow.yml@main
    strategy:
      matrix:
        architecture: [x86_64, aarch64, arm]
        include:
          - architecture: x86_64
            debian_arch: amd64
            rust_toolchain: x86_64-unknown-linux-gnu
          - architecture: aarch64
            debian_arch: arm64
            gcc: gcc-aarch64-linux-gnu
            rust_toolchain: aarch64-unknown-linux-gnu
          - architecture: arm
            debian_arch: arm
            gcc: gcc-arm-linux-gnueabi
            rust_toolchain: arm-unknown-linux-gnueabi
    with:
      architecture: ${{ matrix.architecture }}
      rust_toolchain: ${{ matrix.rust_toolchain }}
      gcc: ${{ matrix.gcc }}

  build-frontend:
    uses: MoDNS/MoDNS/.github/workflow/react-workflow.yml@main

  package:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    strategy:
      matrix:
        architecture: [x86_64, aarch64, arm]
        include:
          - architecture: x86_64
            debian_arch: amd64
            rust_toolchain: x86_64-unknown-linux-gnu
          - architecture: aarch64
            debian_arch: arm64
            gcc: gcc-aarch64-linux-gnu
            rust_toolchain: aarch64-unknown-linux-gnu
          - architecture: arm
            debian_arch: arm
            gcc: gcc-arm-linux-gnueabi
            rust_toolchain: arm-unknown-linux-gnueabi
    outputs:
      package-file-x86_64: ${{ steps.get_file.outputs.filename_x86_64 }}
      package-file-arm: ${{ steps.get_file.outputs.filename_arm }}
      package-file-aarch32: ${{ steps.get_file.outputs.filename_aarch32 }}
    steps:
      - name: Copy Files Into Package
        run: |
          make install MODNS_INSTALL_PKGDIR=.debpkg ARCH=${{ matrix.architecture }}
          cp frontend/dns_frontend/build/* .debpkg/usr/share/web
          mkdir -p .debpkg/usr/lib/modns
      
      - name: Create Debian Package
        uses: jiro4989/build-deb-action@v2
        with:
          package: modns
          package_root: .debpkg
          maintainer: MoDNS
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: ${{ matrix.debian_arch }}
          depends: 'libc6'
          desc: 'Modular DNS Server (MoDNS).'
      - name: Get File
        run: echo ${{ matrix.arch }}=${{ steps.create_debian_package.outputs.file_name }} >> $GITHUB_OUTPUT
  
  create-artifact:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Upload package file
        uses: actions/upload-artifact@v3
        with:
          name: modns-deb-release-${{ github.ref }}
          path: |
            ${{ jobs.package.outputs.package-file-x86_64 }}
            ${{ jobs.package.outputs.package-file-arm }}
            ${{ jobs.package.outputs.package-file-aarch64 }}

